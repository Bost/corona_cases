;; See https://elements.heroku.com/buildpacks/heroku/heroku-buildpack-clojure

;; TODO analyze results of lein nvd check
;; $ lein nvd check
;; ...
;; Checking dependencies for corona_cases 2.0.8 ...
;; using nvd-clojure:  and dependency-check: 5.3.2
;; +--------------------------------------------------|----------------+
;; | dependency                                       | status         |
;; +--------------------------------------------------|----------------+
;; | commons-compress-1.8.jar                         | CVE-2018-11771 |
;; | google-closure-library-0.0-20160609-f42b4a24.jar | CVE-2020-8910  |
;; | guava-19.0.jar                                   | CVE-2018-10237 |
;; | jetty-server-9.4.28.v20200408.jar                | CVE-2019-17638 |
;; | protobuf-java-2.5.0.jar                          | CVE-2015-5237  |
;; +--------------------------------------------------|----------------+

;; 5 vulnerabilities detected. Severity: HIGH
;; Detailed reports saved in: target/nvd

;; TODO integrate spyscope tools.deps. See ~/.clojure/deps.edn - probably
;; under :dev alias, then the cider-jack-in should use it I expect.

{
 ;; See https://github.com/roomkey/lein-v
 ;; "Example of Clojure source code version output"
 ;; and https://github.com/arrdem/lein-git-version

 ;; project version is defined in the pom.xml

 :aliases
 {
  :uberjar
  {:extra-deps {seancorfield/depstar {:mvn/version "1.1.117"}}
   :main-opts
   ["--main" "hf.depstar.uberjar" "target/corona_cases-standalone.jar"
    ;; AOT compilation
    ;; See https://github.com/seancorfield/depstar#aot-compilation
    #_"--compile"]}
  }

 :deps
 {
  org.clojure/clojure     {:mvn/version "1.10.1"}

  ;; CSV reader/writer to/from Clojure data structures.
  org.clojure/data.csv    {:mvn/version "1.0.0"}

  ;; Ring routing lib; dispatching of GET, PUT, etc.
  compojure/compojure {:mvn/version "1.6.2"}

  ;; Ring Jetty adapter
  ring/ring-jetty-adapter {:mvn/version "1.8.2"}

  ;; managing environment variables
  environ/environ {:mvn/version "1.2.0"}

  ;; JSON and JSON SMILE encoding - see also clj-http
  cheshire/cheshire {:mvn/version "5.10.0"}

  ;; for the get-json function. Not having it cheshire as a dependency results
  ;; in: `namespace 'cheshire.factory' not found`
  clj-http/clj-http {:mvn/version "3.10.3"}

  ;; Clojure interface for Telegram Bot API
  org.clojars.bost/morse  {:mvn/version "0.0.0-157-0x8c5c"}

  org.clojure/data.json   {:mvn/version "1.0.0"}
  clojure.java-time/clojure.java-time {:mvn/version "0.3.2"}
  net.cgrand/xforms       {:mvn/version "0.19.2"}
  org.clojars.bost/clj-time-ext {:mvn/version "0.0.0-39-0x3d91"}
  org.clojars.bost/utils {:mvn/version "0.0.0-43-0x8a82"}

  ;; https://github.com/generateme/cljplot
  org.clojars.bost/cljplot {:mvn/version "0.0.2"}

  ;; plotting - see also https://github.com/jsa-aerial/hanami
  #_#_aerial.hanami {:mvn/version "0.12.1"}

  ;; internationalization, ISO 3166-1 country codes etc.
  com.neovisionaries/nv-i18n {:mvn/version "1.27"}

  ;; parse HTML into Clojure data structures - scrapping data from HTML tables
  hickory/hickory {:mvn/version "0.7.1"}

  ;; TODO debugging - changes prompt according to sexp result
  ;; https://github.com/AppsFlyer/mate-clj

  incanter/incanter-zoo {:mvn/version "1.9.3"}   ;; roll-mean
  incanter/incanter-core {:mvn/version "1.9.3"}  ;; mean

  ;; logging
  com.taoensso/timbre {:mvn/version "5.1.0"}}}
